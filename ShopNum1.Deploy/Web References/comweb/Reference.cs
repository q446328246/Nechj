//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1026
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1026 版自动生成。
// 
#pragma warning disable 1591

namespace ShopNum1.Deploy.comweb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MobileServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MobileService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectProdctByShop_category_idOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectProdctByShop_category_id_twoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectProdctByThreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectProdctByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectProdctByGUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectMemberInfoAllByMemloginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAddressByMemberloginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectUserMessageBymemberloginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectMemberRank_LinkCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOrderByMemberloginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOrderByMemberloginIDAndOrderStyleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOrderProductByOrderInfoGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOrderByMemberloginID_GetCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddShopCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrderCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback ADDAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileServiceRechargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectProductByNameAndShop_category_idOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectProductByProductCategoryCodeAndShop_category_idOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllShopCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScore_pv_bOperationCompleted;
        
        private System.Threading.SendOrPostCallback Login_Web_tj88OperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginidGetAllMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOrderByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetALLMemberByShopidOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileOrderRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelteAdressOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAdressIsDefaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteShopCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllShopCarBymemberloginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelcteMoeneyBypwdANDTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignIn_HVOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayDecreaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayDecrease_BankOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayTransfer_BVOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllPreTransferByMemberloginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllAdvancePaymentApplyLogByMemberloginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllAdvancePaymentModifyLogByMemberloginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllPreTransferByMemberloginIDCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllAdvancePaymentApplyLogByMemberloginIDCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllAdvancePaymentModifyLogByMemberloginIDCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback MemberRegisterMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback MemberRegisterMandarinMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback MemberRegisterMemberGetMemberNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback MemberRegisterMandarinMemberGetMemberNumberRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback imgOperationCompleted;
        
        private System.Threading.SendOrPostCallback BindMobileOperationCompleted;
        
        private System.Threading.SendOrPostCallback BindTradePWDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SettingsPWDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MobileService() {
            this.Url = global::ShopNum1.Deploy.Properties.Settings.Default.ShopNum1_Deploy_comweb_MobileService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event SelectProdctByShop_category_idCompletedEventHandler SelectProdctByShop_category_idCompleted;
        
        /// <remarks/>
        public event SelectProdctByShop_category_id_twoCompletedEventHandler SelectProdctByShop_category_id_twoCompleted;
        
        /// <remarks/>
        public event SelectProdctByThreeCompletedEventHandler SelectProdctByThreeCompleted;
        
        /// <remarks/>
        public event SelectProdctByIDCompletedEventHandler SelectProdctByIDCompleted;
        
        /// <remarks/>
        public event SelectProdctByGUIDCompletedEventHandler SelectProdctByGUIDCompleted;
        
        /// <remarks/>
        public event SelectMemberInfoAllByMemloginIDCompletedEventHandler SelectMemberInfoAllByMemloginIDCompleted;
        
        /// <remarks/>
        public event SelectAddressByMemberloginIDCompletedEventHandler SelectAddressByMemberloginIDCompleted;
        
        /// <remarks/>
        public event SelectUserMessageBymemberloginIDCompletedEventHandler SelectUserMessageBymemberloginIDCompleted;
        
        /// <remarks/>
        public event SelectMemberRank_LinkCategoryCompletedEventHandler SelectMemberRank_LinkCategoryCompleted;
        
        /// <remarks/>
        public event SelectOrderByMemberloginIDCompletedEventHandler SelectOrderByMemberloginIDCompleted;
        
        /// <remarks/>
        public event SelectOrderByMemberloginIDAndOrderStyleCompletedEventHandler SelectOrderByMemberloginIDAndOrderStyleCompleted;
        
        /// <remarks/>
        public event SelectOrderProductByOrderInfoGuidCompletedEventHandler SelectOrderProductByOrderInfoGuidCompleted;
        
        /// <remarks/>
        public event SelectOrderByMemberloginID_GetCountCompletedEventHandler SelectOrderByMemberloginID_GetCountCompleted;
        
        /// <remarks/>
        public event CreateOrderCompletedEventHandler CreateOrderCompleted;
        
        /// <remarks/>
        public event AddShopCarCompletedEventHandler AddShopCarCompleted;
        
        /// <remarks/>
        public event PostPriceCompletedEventHandler PostPriceCompleted;
        
        /// <remarks/>
        public event CreateOrderCarCompletedEventHandler CreateOrderCarCompleted;
        
        /// <remarks/>
        public event ADDAddressCompletedEventHandler ADDAddressCompleted;
        
        /// <remarks/>
        public event MobileServiceRechargeCompletedEventHandler MobileServiceRechargeCompleted;
        
        /// <remarks/>
        public event PayCompletedEventHandler PayCompleted;
        
        /// <remarks/>
        public event SelectProductByNameAndShop_category_idCompletedEventHandler SelectProductByNameAndShop_category_idCompleted;
        
        /// <remarks/>
        public event SelectProductByProductCategoryCodeAndShop_category_idCompletedEventHandler SelectProductByProductCategoryCodeAndShop_category_idCompleted;
        
        /// <remarks/>
        public event SelectAllShopCategoryCompletedEventHandler SelectAllShopCategoryCompleted;
        
        /// <remarks/>
        public event GetScore_pv_bCompletedEventHandler GetScore_pv_bCompleted;
        
        /// <remarks/>
        public event Login_Web_tj88CompletedEventHandler Login_Web_tj88Completed;
        
        /// <remarks/>
        public event LoginidGetAllMemberCompletedEventHandler LoginidGetAllMemberCompleted;
        
        /// <remarks/>
        public event SelectOrderByGuidCompletedEventHandler SelectOrderByGuidCompleted;
        
        /// <remarks/>
        public event GetALLMemberByShopidCompletedEventHandler GetALLMemberByShopidCompleted;
        
        /// <remarks/>
        public event MobileOrderRefundCompletedEventHandler MobileOrderRefundCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event MobileReceiptCompletedEventHandler MobileReceiptCompleted;
        
        /// <remarks/>
        public event DelteAdressCompletedEventHandler DelteAdressCompleted;
        
        /// <remarks/>
        public event UpdateAdressIsDefaultCompletedEventHandler UpdateAdressIsDefaultCompleted;
        
        /// <remarks/>
        public event DeleteShopCarCompletedEventHandler DeleteShopCarCompleted;
        
        /// <remarks/>
        public event SelectAllShopCarBymemberloginIDCompletedEventHandler SelectAllShopCarBymemberloginIDCompleted;
        
        /// <remarks/>
        public event SelcteMoeneyBypwdANDTransferCompletedEventHandler SelcteMoeneyBypwdANDTransferCompleted;
        
        /// <remarks/>
        public event SignIn_HVCompletedEventHandler SignIn_HVCompleted;
        
        /// <remarks/>
        public event PayDecreaseCompletedEventHandler PayDecreaseCompleted;
        
        /// <remarks/>
        public event PayDecrease_BankCompletedEventHandler PayDecrease_BankCompleted;
        
        /// <remarks/>
        public event PayTransfer_BVCompletedEventHandler PayTransfer_BVCompleted;
        
        /// <remarks/>
        public event SelectAllPreTransferByMemberloginIDCompletedEventHandler SelectAllPreTransferByMemberloginIDCompleted;
        
        /// <remarks/>
        public event SelectAllAdvancePaymentApplyLogByMemberloginIDCompletedEventHandler SelectAllAdvancePaymentApplyLogByMemberloginIDCompleted;
        
        /// <remarks/>
        public event SelectAllAdvancePaymentModifyLogByMemberloginIDCompletedEventHandler SelectAllAdvancePaymentModifyLogByMemberloginIDCompleted;
        
        /// <remarks/>
        public event SelectAllPreTransferByMemberloginIDCountCompletedEventHandler SelectAllPreTransferByMemberloginIDCountCompleted;
        
        /// <remarks/>
        public event SelectAllAdvancePaymentApplyLogByMemberloginIDCountCompletedEventHandler SelectAllAdvancePaymentApplyLogByMemberloginIDCountCompleted;
        
        /// <remarks/>
        public event SelectAllAdvancePaymentModifyLogByMemberloginIDCountCompletedEventHandler SelectAllAdvancePaymentModifyLogByMemberloginIDCountCompleted;
        
        /// <remarks/>
        public event MemberRegisterMemberCompletedEventHandler MemberRegisterMemberCompleted;
        
        /// <remarks/>
        public event MemberRegisterMandarinMemberCompletedEventHandler MemberRegisterMandarinMemberCompleted;
        
        /// <remarks/>
        public event MemberRegisterMemberGetMemberNumberCompletedEventHandler MemberRegisterMemberGetMemberNumberCompleted;
        
        /// <remarks/>
        public event MemberRegisterMandarinMemberGetMemberNumberRegisterCompletedEventHandler MemberRegisterMandarinMemberGetMemberNumberRegisterCompleted;
        
        /// <remarks/>
        public event imgCompletedEventHandler imgCompleted;
        
        /// <remarks/>
        public event BindMobileCompletedEventHandler BindMobileCompleted;
        
        /// <remarks/>
        public event BindTradePWDCompletedEventHandler BindTradePWDCompleted;
        
        /// <remarks/>
        public event SettingsPWDCompletedEventHandler SettingsPWDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Login(string MemberloginID, string PWD) {
            this.Invoke("Login", new object[] {
                        MemberloginID,
                        PWD});
        }
        
        /// <remarks/>
        public void LoginAsync(string MemberloginID, string PWD) {
            this.LoginAsync(MemberloginID, PWD, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string MemberloginID, string PWD, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        MemberloginID,
                        PWD}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectProdctByShop_category_id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectProdctByShop_category_id(string Shop_category_id, int StartNumber, int OrderNumber) {
            this.Invoke("SelectProdctByShop_category_id", new object[] {
                        Shop_category_id,
                        StartNumber,
                        OrderNumber});
        }
        
        /// <remarks/>
        public void SelectProdctByShop_category_idAsync(string Shop_category_id, int StartNumber, int OrderNumber) {
            this.SelectProdctByShop_category_idAsync(Shop_category_id, StartNumber, OrderNumber, null);
        }
        
        /// <remarks/>
        public void SelectProdctByShop_category_idAsync(string Shop_category_id, int StartNumber, int OrderNumber, object userState) {
            if ((this.SelectProdctByShop_category_idOperationCompleted == null)) {
                this.SelectProdctByShop_category_idOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectProdctByShop_category_idOperationCompleted);
            }
            this.InvokeAsync("SelectProdctByShop_category_id", new object[] {
                        Shop_category_id,
                        StartNumber,
                        OrderNumber}, this.SelectProdctByShop_category_idOperationCompleted, userState);
        }
        
        private void OnSelectProdctByShop_category_idOperationCompleted(object arg) {
            if ((this.SelectProdctByShop_category_idCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectProdctByShop_category_idCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectProdctByShop_category_id_two", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectProdctByShop_category_id_two(string Shop_category_id, int StartNumber, int OrderNumber) {
            this.Invoke("SelectProdctByShop_category_id_two", new object[] {
                        Shop_category_id,
                        StartNumber,
                        OrderNumber});
        }
        
        /// <remarks/>
        public void SelectProdctByShop_category_id_twoAsync(string Shop_category_id, int StartNumber, int OrderNumber) {
            this.SelectProdctByShop_category_id_twoAsync(Shop_category_id, StartNumber, OrderNumber, null);
        }
        
        /// <remarks/>
        public void SelectProdctByShop_category_id_twoAsync(string Shop_category_id, int StartNumber, int OrderNumber, object userState) {
            if ((this.SelectProdctByShop_category_id_twoOperationCompleted == null)) {
                this.SelectProdctByShop_category_id_twoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectProdctByShop_category_id_twoOperationCompleted);
            }
            this.InvokeAsync("SelectProdctByShop_category_id_two", new object[] {
                        Shop_category_id,
                        StartNumber,
                        OrderNumber}, this.SelectProdctByShop_category_id_twoOperationCompleted, userState);
        }
        
        private void OnSelectProdctByShop_category_id_twoOperationCompleted(object arg) {
            if ((this.SelectProdctByShop_category_id_twoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectProdctByShop_category_id_twoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectProdctByThree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectProdctByThree() {
            this.Invoke("SelectProdctByThree", new object[0]);
        }
        
        /// <remarks/>
        public void SelectProdctByThreeAsync() {
            this.SelectProdctByThreeAsync(null);
        }
        
        /// <remarks/>
        public void SelectProdctByThreeAsync(object userState) {
            if ((this.SelectProdctByThreeOperationCompleted == null)) {
                this.SelectProdctByThreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectProdctByThreeOperationCompleted);
            }
            this.InvokeAsync("SelectProdctByThree", new object[0], this.SelectProdctByThreeOperationCompleted, userState);
        }
        
        private void OnSelectProdctByThreeOperationCompleted(object arg) {
            if ((this.SelectProdctByThreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectProdctByThreeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectProdctByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectProdctByID(string ID, int shop_category_id) {
            this.Invoke("SelectProdctByID", new object[] {
                        ID,
                        shop_category_id});
        }
        
        /// <remarks/>
        public void SelectProdctByIDAsync(string ID, int shop_category_id) {
            this.SelectProdctByIDAsync(ID, shop_category_id, null);
        }
        
        /// <remarks/>
        public void SelectProdctByIDAsync(string ID, int shop_category_id, object userState) {
            if ((this.SelectProdctByIDOperationCompleted == null)) {
                this.SelectProdctByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectProdctByIDOperationCompleted);
            }
            this.InvokeAsync("SelectProdctByID", new object[] {
                        ID,
                        shop_category_id}, this.SelectProdctByIDOperationCompleted, userState);
        }
        
        private void OnSelectProdctByIDOperationCompleted(object arg) {
            if ((this.SelectProdctByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectProdctByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectProdctByGUID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectProdctByGUID(string guid, int shop_category_id) {
            this.Invoke("SelectProdctByGUID", new object[] {
                        guid,
                        shop_category_id});
        }
        
        /// <remarks/>
        public void SelectProdctByGUIDAsync(string guid, int shop_category_id) {
            this.SelectProdctByGUIDAsync(guid, shop_category_id, null);
        }
        
        /// <remarks/>
        public void SelectProdctByGUIDAsync(string guid, int shop_category_id, object userState) {
            if ((this.SelectProdctByGUIDOperationCompleted == null)) {
                this.SelectProdctByGUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectProdctByGUIDOperationCompleted);
            }
            this.InvokeAsync("SelectProdctByGUID", new object[] {
                        guid,
                        shop_category_id}, this.SelectProdctByGUIDOperationCompleted, userState);
        }
        
        private void OnSelectProdctByGUIDOperationCompleted(object arg) {
            if ((this.SelectProdctByGUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectProdctByGUIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectMemberInfoAllByMemloginID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectMemberInfoAllByMemloginID(string memberloginID, string token) {
            this.Invoke("SelectMemberInfoAllByMemloginID", new object[] {
                        memberloginID,
                        token});
        }
        
        /// <remarks/>
        public void SelectMemberInfoAllByMemloginIDAsync(string memberloginID, string token) {
            this.SelectMemberInfoAllByMemloginIDAsync(memberloginID, token, null);
        }
        
        /// <remarks/>
        public void SelectMemberInfoAllByMemloginIDAsync(string memberloginID, string token, object userState) {
            if ((this.SelectMemberInfoAllByMemloginIDOperationCompleted == null)) {
                this.SelectMemberInfoAllByMemloginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMemberInfoAllByMemloginIDOperationCompleted);
            }
            this.InvokeAsync("SelectMemberInfoAllByMemloginID", new object[] {
                        memberloginID,
                        token}, this.SelectMemberInfoAllByMemloginIDOperationCompleted, userState);
        }
        
        private void OnSelectMemberInfoAllByMemloginIDOperationCompleted(object arg) {
            if ((this.SelectMemberInfoAllByMemloginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectMemberInfoAllByMemloginIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAddressByMemberloginID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectAddressByMemberloginID(string memberloginID, string token) {
            this.Invoke("SelectAddressByMemberloginID", new object[] {
                        memberloginID,
                        token});
        }
        
        /// <remarks/>
        public void SelectAddressByMemberloginIDAsync(string memberloginID, string token) {
            this.SelectAddressByMemberloginIDAsync(memberloginID, token, null);
        }
        
        /// <remarks/>
        public void SelectAddressByMemberloginIDAsync(string memberloginID, string token, object userState) {
            if ((this.SelectAddressByMemberloginIDOperationCompleted == null)) {
                this.SelectAddressByMemberloginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAddressByMemberloginIDOperationCompleted);
            }
            this.InvokeAsync("SelectAddressByMemberloginID", new object[] {
                        memberloginID,
                        token}, this.SelectAddressByMemberloginIDOperationCompleted, userState);
        }
        
        private void OnSelectAddressByMemberloginIDOperationCompleted(object arg) {
            if ((this.SelectAddressByMemberloginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAddressByMemberloginIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectUserMessageBymemberloginID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectUserMessageBymemberloginID(string memberloginID, string token) {
            this.Invoke("SelectUserMessageBymemberloginID", new object[] {
                        memberloginID,
                        token});
        }
        
        /// <remarks/>
        public void SelectUserMessageBymemberloginIDAsync(string memberloginID, string token) {
            this.SelectUserMessageBymemberloginIDAsync(memberloginID, token, null);
        }
        
        /// <remarks/>
        public void SelectUserMessageBymemberloginIDAsync(string memberloginID, string token, object userState) {
            if ((this.SelectUserMessageBymemberloginIDOperationCompleted == null)) {
                this.SelectUserMessageBymemberloginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectUserMessageBymemberloginIDOperationCompleted);
            }
            this.InvokeAsync("SelectUserMessageBymemberloginID", new object[] {
                        memberloginID,
                        token}, this.SelectUserMessageBymemberloginIDOperationCompleted, userState);
        }
        
        private void OnSelectUserMessageBymemberloginIDOperationCompleted(object arg) {
            if ((this.SelectUserMessageBymemberloginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectUserMessageBymemberloginIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectMemberRank_LinkCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectMemberRank_LinkCategory(string memberloginID, string token, int IsReadOrBuy, int Category_ID) {
            this.Invoke("SelectMemberRank_LinkCategory", new object[] {
                        memberloginID,
                        token,
                        IsReadOrBuy,
                        Category_ID});
        }
        
        /// <remarks/>
        public void SelectMemberRank_LinkCategoryAsync(string memberloginID, string token, int IsReadOrBuy, int Category_ID) {
            this.SelectMemberRank_LinkCategoryAsync(memberloginID, token, IsReadOrBuy, Category_ID, null);
        }
        
        /// <remarks/>
        public void SelectMemberRank_LinkCategoryAsync(string memberloginID, string token, int IsReadOrBuy, int Category_ID, object userState) {
            if ((this.SelectMemberRank_LinkCategoryOperationCompleted == null)) {
                this.SelectMemberRank_LinkCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMemberRank_LinkCategoryOperationCompleted);
            }
            this.InvokeAsync("SelectMemberRank_LinkCategory", new object[] {
                        memberloginID,
                        token,
                        IsReadOrBuy,
                        Category_ID}, this.SelectMemberRank_LinkCategoryOperationCompleted, userState);
        }
        
        private void OnSelectMemberRank_LinkCategoryOperationCompleted(object arg) {
            if ((this.SelectMemberRank_LinkCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectMemberRank_LinkCategoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderByMemberloginID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectOrderByMemberloginID(string memberloginID, string token, int startnum, int ordernumber) {
            this.Invoke("SelectOrderByMemberloginID", new object[] {
                        memberloginID,
                        token,
                        startnum,
                        ordernumber});
        }
        
        /// <remarks/>
        public void SelectOrderByMemberloginIDAsync(string memberloginID, string token, int startnum, int ordernumber) {
            this.SelectOrderByMemberloginIDAsync(memberloginID, token, startnum, ordernumber, null);
        }
        
        /// <remarks/>
        public void SelectOrderByMemberloginIDAsync(string memberloginID, string token, int startnum, int ordernumber, object userState) {
            if ((this.SelectOrderByMemberloginIDOperationCompleted == null)) {
                this.SelectOrderByMemberloginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOrderByMemberloginIDOperationCompleted);
            }
            this.InvokeAsync("SelectOrderByMemberloginID", new object[] {
                        memberloginID,
                        token,
                        startnum,
                        ordernumber}, this.SelectOrderByMemberloginIDOperationCompleted, userState);
        }
        
        private void OnSelectOrderByMemberloginIDOperationCompleted(object arg) {
            if ((this.SelectOrderByMemberloginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOrderByMemberloginIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderByMemberloginIDAndOrderStyle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectOrderByMemberloginIDAndOrderStyle(string memberloginID, string token, int startnum, int ordernumber, string OrderStyle) {
            this.Invoke("SelectOrderByMemberloginIDAndOrderStyle", new object[] {
                        memberloginID,
                        token,
                        startnum,
                        ordernumber,
                        OrderStyle});
        }
        
        /// <remarks/>
        public void SelectOrderByMemberloginIDAndOrderStyleAsync(string memberloginID, string token, int startnum, int ordernumber, string OrderStyle) {
            this.SelectOrderByMemberloginIDAndOrderStyleAsync(memberloginID, token, startnum, ordernumber, OrderStyle, null);
        }
        
        /// <remarks/>
        public void SelectOrderByMemberloginIDAndOrderStyleAsync(string memberloginID, string token, int startnum, int ordernumber, string OrderStyle, object userState) {
            if ((this.SelectOrderByMemberloginIDAndOrderStyleOperationCompleted == null)) {
                this.SelectOrderByMemberloginIDAndOrderStyleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOrderByMemberloginIDAndOrderStyleOperationCompleted);
            }
            this.InvokeAsync("SelectOrderByMemberloginIDAndOrderStyle", new object[] {
                        memberloginID,
                        token,
                        startnum,
                        ordernumber,
                        OrderStyle}, this.SelectOrderByMemberloginIDAndOrderStyleOperationCompleted, userState);
        }
        
        private void OnSelectOrderByMemberloginIDAndOrderStyleOperationCompleted(object arg) {
            if ((this.SelectOrderByMemberloginIDAndOrderStyleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOrderByMemberloginIDAndOrderStyleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderProductByOrderInfoGuid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectOrderProductByOrderInfoGuid(string OrderInfoGuid, string token) {
            this.Invoke("SelectOrderProductByOrderInfoGuid", new object[] {
                        OrderInfoGuid,
                        token});
        }
        
        /// <remarks/>
        public void SelectOrderProductByOrderInfoGuidAsync(string OrderInfoGuid, string token) {
            this.SelectOrderProductByOrderInfoGuidAsync(OrderInfoGuid, token, null);
        }
        
        /// <remarks/>
        public void SelectOrderProductByOrderInfoGuidAsync(string OrderInfoGuid, string token, object userState) {
            if ((this.SelectOrderProductByOrderInfoGuidOperationCompleted == null)) {
                this.SelectOrderProductByOrderInfoGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOrderProductByOrderInfoGuidOperationCompleted);
            }
            this.InvokeAsync("SelectOrderProductByOrderInfoGuid", new object[] {
                        OrderInfoGuid,
                        token}, this.SelectOrderProductByOrderInfoGuidOperationCompleted, userState);
        }
        
        private void OnSelectOrderProductByOrderInfoGuidOperationCompleted(object arg) {
            if ((this.SelectOrderProductByOrderInfoGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOrderProductByOrderInfoGuidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderByMemberloginID_GetCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectOrderByMemberloginID_GetCount(string memberloginID, string token) {
            this.Invoke("SelectOrderByMemberloginID_GetCount", new object[] {
                        memberloginID,
                        token});
        }
        
        /// <remarks/>
        public void SelectOrderByMemberloginID_GetCountAsync(string memberloginID, string token) {
            this.SelectOrderByMemberloginID_GetCountAsync(memberloginID, token, null);
        }
        
        /// <remarks/>
        public void SelectOrderByMemberloginID_GetCountAsync(string memberloginID, string token, object userState) {
            if ((this.SelectOrderByMemberloginID_GetCountOperationCompleted == null)) {
                this.SelectOrderByMemberloginID_GetCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOrderByMemberloginID_GetCountOperationCompleted);
            }
            this.InvokeAsync("SelectOrderByMemberloginID_GetCount", new object[] {
                        memberloginID,
                        token}, this.SelectOrderByMemberloginID_GetCountOperationCompleted, userState);
        }
        
        private void OnSelectOrderByMemberloginID_GetCountOperationCompleted(object arg) {
            if ((this.SelectOrderByMemberloginID_GetCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOrderByMemberloginID_GetCountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateOrder(string token, string ServiceAgent, string MemloginID, int ShopCategoryID, int PayMentType, string ProductGuid, int BuyNumber, decimal PostPrice, string Color, string Size, string AddressGuid, string TextBoxMessage, string InvoiceType, string InvoiceTitle, string InvoiceContent) {
            this.Invoke("CreateOrder", new object[] {
                        token,
                        ServiceAgent,
                        MemloginID,
                        ShopCategoryID,
                        PayMentType,
                        ProductGuid,
                        BuyNumber,
                        PostPrice,
                        Color,
                        Size,
                        AddressGuid,
                        TextBoxMessage,
                        InvoiceType,
                        InvoiceTitle,
                        InvoiceContent});
        }
        
        /// <remarks/>
        public void CreateOrderAsync(string token, string ServiceAgent, string MemloginID, int ShopCategoryID, int PayMentType, string ProductGuid, int BuyNumber, decimal PostPrice, string Color, string Size, string AddressGuid, string TextBoxMessage, string InvoiceType, string InvoiceTitle, string InvoiceContent) {
            this.CreateOrderAsync(token, ServiceAgent, MemloginID, ShopCategoryID, PayMentType, ProductGuid, BuyNumber, PostPrice, Color, Size, AddressGuid, TextBoxMessage, InvoiceType, InvoiceTitle, InvoiceContent, null);
        }
        
        /// <remarks/>
        public void CreateOrderAsync(
                    string token, 
                    string ServiceAgent, 
                    string MemloginID, 
                    int ShopCategoryID, 
                    int PayMentType, 
                    string ProductGuid, 
                    int BuyNumber, 
                    decimal PostPrice, 
                    string Color, 
                    string Size, 
                    string AddressGuid, 
                    string TextBoxMessage, 
                    string InvoiceType, 
                    string InvoiceTitle, 
                    string InvoiceContent, 
                    object userState) {
            if ((this.CreateOrderOperationCompleted == null)) {
                this.CreateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrderOperationCompleted);
            }
            this.InvokeAsync("CreateOrder", new object[] {
                        token,
                        ServiceAgent,
                        MemloginID,
                        ShopCategoryID,
                        PayMentType,
                        ProductGuid,
                        BuyNumber,
                        PostPrice,
                        Color,
                        Size,
                        AddressGuid,
                        TextBoxMessage,
                        InvoiceType,
                        InvoiceTitle,
                        InvoiceContent}, this.CreateOrderOperationCompleted, userState);
        }
        
        private void OnCreateOrderOperationCompleted(object arg) {
            if ((this.CreateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddShopCar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddShopCar(string MyMemLoginID, string category, string Num, string guid, string Size, string Color, string token) {
            this.Invoke("AddShopCar", new object[] {
                        MyMemLoginID,
                        category,
                        Num,
                        guid,
                        Size,
                        Color,
                        token});
        }
        
        /// <remarks/>
        public void AddShopCarAsync(string MyMemLoginID, string category, string Num, string guid, string Size, string Color, string token) {
            this.AddShopCarAsync(MyMemLoginID, category, Num, guid, Size, Color, token, null);
        }
        
        /// <remarks/>
        public void AddShopCarAsync(string MyMemLoginID, string category, string Num, string guid, string Size, string Color, string token, object userState) {
            if ((this.AddShopCarOperationCompleted == null)) {
                this.AddShopCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddShopCarOperationCompleted);
            }
            this.InvokeAsync("AddShopCar", new object[] {
                        MyMemLoginID,
                        category,
                        Num,
                        guid,
                        Size,
                        Color,
                        token}, this.AddShopCarOperationCompleted, userState);
        }
        
        private void OnAddShopCarOperationCompleted(object arg) {
            if ((this.AddShopCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddShopCarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostPrice(string ShopID, string token) {
            this.Invoke("PostPrice", new object[] {
                        ShopID,
                        token});
        }
        
        /// <remarks/>
        public void PostPriceAsync(string ShopID, string token) {
            this.PostPriceAsync(ShopID, token, null);
        }
        
        /// <remarks/>
        public void PostPriceAsync(string ShopID, string token, object userState) {
            if ((this.PostPriceOperationCompleted == null)) {
                this.PostPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostPriceOperationCompleted);
            }
            this.InvokeAsync("PostPrice", new object[] {
                        ShopID,
                        token}, this.PostPriceOperationCompleted, userState);
        }
        
        private void OnPostPriceOperationCompleted(object arg) {
            if ((this.PostPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostPriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateOrderCar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateOrderCar(
                    string ServiceAgent, 
                    string MemloginID, 
                    int ShopCategoryID, 
                    int PayMentType, 
                    string ProductGuids, 
                    int BuyNumber, 
                    [System.Xml.Serialization.XmlElementAttribute("PostPrice")] decimal PostPrice1, 
                    string Color, 
                    string Size, 
                    string AddressGuid, 
                    string ShopID, 
                    string token, 
                    string TextBoxMessage, 
                    string InvoiceType, 
                    string InvoiceTitle, 
                    string InvoiceContent) {
            this.Invoke("CreateOrderCar", new object[] {
                        ServiceAgent,
                        MemloginID,
                        ShopCategoryID,
                        PayMentType,
                        ProductGuids,
                        BuyNumber,
                        PostPrice1,
                        Color,
                        Size,
                        AddressGuid,
                        ShopID,
                        token,
                        TextBoxMessage,
                        InvoiceType,
                        InvoiceTitle,
                        InvoiceContent});
        }
        
        /// <remarks/>
        public void CreateOrderCarAsync(
                    string ServiceAgent, 
                    string MemloginID, 
                    int ShopCategoryID, 
                    int PayMentType, 
                    string ProductGuids, 
                    int BuyNumber, 
                    decimal PostPrice1, 
                    string Color, 
                    string Size, 
                    string AddressGuid, 
                    string ShopID, 
                    string token, 
                    string TextBoxMessage, 
                    string InvoiceType, 
                    string InvoiceTitle, 
                    string InvoiceContent) {
            this.CreateOrderCarAsync(ServiceAgent, MemloginID, ShopCategoryID, PayMentType, ProductGuids, BuyNumber, PostPrice1, Color, Size, AddressGuid, ShopID, token, TextBoxMessage, InvoiceType, InvoiceTitle, InvoiceContent, null);
        }
        
        /// <remarks/>
        public void CreateOrderCarAsync(
                    string ServiceAgent, 
                    string MemloginID, 
                    int ShopCategoryID, 
                    int PayMentType, 
                    string ProductGuids, 
                    int BuyNumber, 
                    decimal PostPrice1, 
                    string Color, 
                    string Size, 
                    string AddressGuid, 
                    string ShopID, 
                    string token, 
                    string TextBoxMessage, 
                    string InvoiceType, 
                    string InvoiceTitle, 
                    string InvoiceContent, 
                    object userState) {
            if ((this.CreateOrderCarOperationCompleted == null)) {
                this.CreateOrderCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrderCarOperationCompleted);
            }
            this.InvokeAsync("CreateOrderCar", new object[] {
                        ServiceAgent,
                        MemloginID,
                        ShopCategoryID,
                        PayMentType,
                        ProductGuids,
                        BuyNumber,
                        PostPrice1,
                        Color,
                        Size,
                        AddressGuid,
                        ShopID,
                        token,
                        TextBoxMessage,
                        InvoiceType,
                        InvoiceTitle,
                        InvoiceContent}, this.CreateOrderCarOperationCompleted, userState);
        }
        
        private void OnCreateOrderCarOperationCompleted(object arg) {
            if ((this.CreateOrderCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrderCarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ADDAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ADDAddress(string Name, string Email, string AddressValue, string Area, string AddressCode, string Postalcode, string Tel, string Mobile, string MemLoginID, string Address, string token) {
            this.Invoke("ADDAddress", new object[] {
                        Name,
                        Email,
                        AddressValue,
                        Area,
                        AddressCode,
                        Postalcode,
                        Tel,
                        Mobile,
                        MemLoginID,
                        Address,
                        token});
        }
        
        /// <remarks/>
        public void ADDAddressAsync(string Name, string Email, string AddressValue, string Area, string AddressCode, string Postalcode, string Tel, string Mobile, string MemLoginID, string Address, string token) {
            this.ADDAddressAsync(Name, Email, AddressValue, Area, AddressCode, Postalcode, Tel, Mobile, MemLoginID, Address, token, null);
        }
        
        /// <remarks/>
        public void ADDAddressAsync(string Name, string Email, string AddressValue, string Area, string AddressCode, string Postalcode, string Tel, string Mobile, string MemLoginID, string Address, string token, object userState) {
            if ((this.ADDAddressOperationCompleted == null)) {
                this.ADDAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnADDAddressOperationCompleted);
            }
            this.InvokeAsync("ADDAddress", new object[] {
                        Name,
                        Email,
                        AddressValue,
                        Area,
                        AddressCode,
                        Postalcode,
                        Tel,
                        Mobile,
                        MemLoginID,
                        Address,
                        token}, this.ADDAddressOperationCompleted, userState);
        }
        
        private void OnADDAddressOperationCompleted(object arg) {
            if ((this.ADDAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ADDAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MobileServiceRecharge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MobileServiceRecharge(string token, string MemloginID, decimal RechargeBV, int RechargeType, string UserName, string BankCard, int BankCardType) {
            this.Invoke("MobileServiceRecharge", new object[] {
                        token,
                        MemloginID,
                        RechargeBV,
                        RechargeType,
                        UserName,
                        BankCard,
                        BankCardType});
        }
        
        /// <remarks/>
        public void MobileServiceRechargeAsync(string token, string MemloginID, decimal RechargeBV, int RechargeType, string UserName, string BankCard, int BankCardType) {
            this.MobileServiceRechargeAsync(token, MemloginID, RechargeBV, RechargeType, UserName, BankCard, BankCardType, null);
        }
        
        /// <remarks/>
        public void MobileServiceRechargeAsync(string token, string MemloginID, decimal RechargeBV, int RechargeType, string UserName, string BankCard, int BankCardType, object userState) {
            if ((this.MobileServiceRechargeOperationCompleted == null)) {
                this.MobileServiceRechargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileServiceRechargeOperationCompleted);
            }
            this.InvokeAsync("MobileServiceRecharge", new object[] {
                        token,
                        MemloginID,
                        RechargeBV,
                        RechargeType,
                        UserName,
                        BankCard,
                        BankCardType}, this.MobileServiceRechargeOperationCompleted, userState);
        }
        
        private void OnMobileServiceRechargeOperationCompleted(object arg) {
            if ((this.MobileServiceRechargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileServiceRechargeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Pay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Pay(string OrderNumber, string MemloginID, string ScoreHvType, string PayPwd, string token) {
            this.Invoke("Pay", new object[] {
                        OrderNumber,
                        MemloginID,
                        ScoreHvType,
                        PayPwd,
                        token});
        }
        
        /// <remarks/>
        public void PayAsync(string OrderNumber, string MemloginID, string ScoreHvType, string PayPwd, string token) {
            this.PayAsync(OrderNumber, MemloginID, ScoreHvType, PayPwd, token, null);
        }
        
        /// <remarks/>
        public void PayAsync(string OrderNumber, string MemloginID, string ScoreHvType, string PayPwd, string token, object userState) {
            if ((this.PayOperationCompleted == null)) {
                this.PayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayOperationCompleted);
            }
            this.InvokeAsync("Pay", new object[] {
                        OrderNumber,
                        MemloginID,
                        ScoreHvType,
                        PayPwd,
                        token}, this.PayOperationCompleted, userState);
        }
        
        private void OnPayOperationCompleted(object arg) {
            if ((this.PayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectProductByNameAndShop_category_id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectProductByNameAndShop_category_id(string Shop_category_id, string Name) {
            this.Invoke("SelectProductByNameAndShop_category_id", new object[] {
                        Shop_category_id,
                        Name});
        }
        
        /// <remarks/>
        public void SelectProductByNameAndShop_category_idAsync(string Shop_category_id, string Name) {
            this.SelectProductByNameAndShop_category_idAsync(Shop_category_id, Name, null);
        }
        
        /// <remarks/>
        public void SelectProductByNameAndShop_category_idAsync(string Shop_category_id, string Name, object userState) {
            if ((this.SelectProductByNameAndShop_category_idOperationCompleted == null)) {
                this.SelectProductByNameAndShop_category_idOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectProductByNameAndShop_category_idOperationCompleted);
            }
            this.InvokeAsync("SelectProductByNameAndShop_category_id", new object[] {
                        Shop_category_id,
                        Name}, this.SelectProductByNameAndShop_category_idOperationCompleted, userState);
        }
        
        private void OnSelectProductByNameAndShop_category_idOperationCompleted(object arg) {
            if ((this.SelectProductByNameAndShop_category_idCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectProductByNameAndShop_category_idCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectProductByProductCategoryCodeAndShop_category_id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectProductByProductCategoryCodeAndShop_category_id(string shop_category_id, int top, int number, string ProductCategoryCode, string name) {
            this.Invoke("SelectProductByProductCategoryCodeAndShop_category_id", new object[] {
                        shop_category_id,
                        top,
                        number,
                        ProductCategoryCode,
                        name});
        }
        
        /// <remarks/>
        public void SelectProductByProductCategoryCodeAndShop_category_idAsync(string shop_category_id, int top, int number, string ProductCategoryCode, string name) {
            this.SelectProductByProductCategoryCodeAndShop_category_idAsync(shop_category_id, top, number, ProductCategoryCode, name, null);
        }
        
        /// <remarks/>
        public void SelectProductByProductCategoryCodeAndShop_category_idAsync(string shop_category_id, int top, int number, string ProductCategoryCode, string name, object userState) {
            if ((this.SelectProductByProductCategoryCodeAndShop_category_idOperationCompleted == null)) {
                this.SelectProductByProductCategoryCodeAndShop_category_idOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectProductByProductCategoryCodeAndShop_category_idOperationCompleted);
            }
            this.InvokeAsync("SelectProductByProductCategoryCodeAndShop_category_id", new object[] {
                        shop_category_id,
                        top,
                        number,
                        ProductCategoryCode,
                        name}, this.SelectProductByProductCategoryCodeAndShop_category_idOperationCompleted, userState);
        }
        
        private void OnSelectProductByProductCategoryCodeAndShop_category_idOperationCompleted(object arg) {
            if ((this.SelectProductByProductCategoryCodeAndShop_category_idCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectProductByProductCategoryCodeAndShop_category_idCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllShopCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectAllShopCategory() {
            this.Invoke("SelectAllShopCategory", new object[0]);
        }
        
        /// <remarks/>
        public void SelectAllShopCategoryAsync() {
            this.SelectAllShopCategoryAsync(null);
        }
        
        /// <remarks/>
        public void SelectAllShopCategoryAsync(object userState) {
            if ((this.SelectAllShopCategoryOperationCompleted == null)) {
                this.SelectAllShopCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllShopCategoryOperationCompleted);
            }
            this.InvokeAsync("SelectAllShopCategory", new object[0], this.SelectAllShopCategoryOperationCompleted, userState);
        }
        
        private void OnSelectAllShopCategoryOperationCompleted(object arg) {
            if ((this.SelectAllShopCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllShopCategoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScore_pv_b", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetScore_pv_b(string MemLoginID, string token) {
            this.Invoke("GetScore_pv_b", new object[] {
                        MemLoginID,
                        token});
        }
        
        /// <remarks/>
        public void GetScore_pv_bAsync(string MemLoginID, string token) {
            this.GetScore_pv_bAsync(MemLoginID, token, null);
        }
        
        /// <remarks/>
        public void GetScore_pv_bAsync(string MemLoginID, string token, object userState) {
            if ((this.GetScore_pv_bOperationCompleted == null)) {
                this.GetScore_pv_bOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScore_pv_bOperationCompleted);
            }
            this.InvokeAsync("GetScore_pv_b", new object[] {
                        MemLoginID,
                        token}, this.GetScore_pv_bOperationCompleted, userState);
        }
        
        private void OnGetScore_pv_bOperationCompleted(object arg) {
            if ((this.GetScore_pv_bCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScore_pv_bCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login_Web_tj88", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login_Web_tj88(string MemberloginID, string PWD, string IdentityCard) {
            object[] results = this.Invoke("Login_Web_tj88", new object[] {
                        MemberloginID,
                        PWD,
                        IdentityCard});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Login_Web_tj88Async(string MemberloginID, string PWD, string IdentityCard) {
            this.Login_Web_tj88Async(MemberloginID, PWD, IdentityCard, null);
        }
        
        /// <remarks/>
        public void Login_Web_tj88Async(string MemberloginID, string PWD, string IdentityCard, object userState) {
            if ((this.Login_Web_tj88OperationCompleted == null)) {
                this.Login_Web_tj88OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogin_Web_tj88OperationCompleted);
            }
            this.InvokeAsync("Login_Web_tj88", new object[] {
                        MemberloginID,
                        PWD,
                        IdentityCard}, this.Login_Web_tj88OperationCompleted, userState);
        }
        
        private void OnLogin_Web_tj88OperationCompleted(object arg) {
            if ((this.Login_Web_tj88Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Login_Web_tj88Completed(this, new Login_Web_tj88CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginidGetAllMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoginidGetAllMember(string MemberLongiNO, string md5) {
            object[] results = this.Invoke("LoginidGetAllMember", new object[] {
                        MemberLongiNO,
                        md5});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoginidGetAllMemberAsync(string MemberLongiNO, string md5) {
            this.LoginidGetAllMemberAsync(MemberLongiNO, md5, null);
        }
        
        /// <remarks/>
        public void LoginidGetAllMemberAsync(string MemberLongiNO, string md5, object userState) {
            if ((this.LoginidGetAllMemberOperationCompleted == null)) {
                this.LoginidGetAllMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginidGetAllMemberOperationCompleted);
            }
            this.InvokeAsync("LoginidGetAllMember", new object[] {
                        MemberLongiNO,
                        md5}, this.LoginidGetAllMemberOperationCompleted, userState);
        }
        
        private void OnLoginidGetAllMemberOperationCompleted(object arg) {
            if ((this.LoginidGetAllMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginidGetAllMemberCompleted(this, new LoginidGetAllMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderByGuid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectOrderByGuid(string token, string guid) {
            this.Invoke("SelectOrderByGuid", new object[] {
                        token,
                        guid});
        }
        
        /// <remarks/>
        public void SelectOrderByGuidAsync(string token, string guid) {
            this.SelectOrderByGuidAsync(token, guid, null);
        }
        
        /// <remarks/>
        public void SelectOrderByGuidAsync(string token, string guid, object userState) {
            if ((this.SelectOrderByGuidOperationCompleted == null)) {
                this.SelectOrderByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOrderByGuidOperationCompleted);
            }
            this.InvokeAsync("SelectOrderByGuid", new object[] {
                        token,
                        guid}, this.SelectOrderByGuidOperationCompleted, userState);
        }
        
        private void OnSelectOrderByGuidOperationCompleted(object arg) {
            if ((this.SelectOrderByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOrderByGuidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetALLMemberByShopid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetALLMemberByShopid(string shopid) {
            this.Invoke("GetALLMemberByShopid", new object[] {
                        shopid});
        }
        
        /// <remarks/>
        public void GetALLMemberByShopidAsync(string shopid) {
            this.GetALLMemberByShopidAsync(shopid, null);
        }
        
        /// <remarks/>
        public void GetALLMemberByShopidAsync(string shopid, object userState) {
            if ((this.GetALLMemberByShopidOperationCompleted == null)) {
                this.GetALLMemberByShopidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetALLMemberByShopidOperationCompleted);
            }
            this.InvokeAsync("GetALLMemberByShopid", new object[] {
                        shopid}, this.GetALLMemberByShopidOperationCompleted, userState);
        }
        
        private void OnGetALLMemberByShopidOperationCompleted(object arg) {
            if ((this.GetALLMemberByShopidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetALLMemberByShopidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MobileOrderRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MobileOrderRefund(string MemLoginID, string OrderGuid, string ShopID, string RefundReason, string Introduce, string RefundTypes, string token) {
            this.Invoke("MobileOrderRefund", new object[] {
                        MemLoginID,
                        OrderGuid,
                        ShopID,
                        RefundReason,
                        Introduce,
                        RefundTypes,
                        token});
        }
        
        /// <remarks/>
        public void MobileOrderRefundAsync(string MemLoginID, string OrderGuid, string ShopID, string RefundReason, string Introduce, string RefundTypes, string token) {
            this.MobileOrderRefundAsync(MemLoginID, OrderGuid, ShopID, RefundReason, Introduce, RefundTypes, token, null);
        }
        
        /// <remarks/>
        public void MobileOrderRefundAsync(string MemLoginID, string OrderGuid, string ShopID, string RefundReason, string Introduce, string RefundTypes, string token, object userState) {
            if ((this.MobileOrderRefundOperationCompleted == null)) {
                this.MobileOrderRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileOrderRefundOperationCompleted);
            }
            this.InvokeAsync("MobileOrderRefund", new object[] {
                        MemLoginID,
                        OrderGuid,
                        ShopID,
                        RefundReason,
                        Introduce,
                        RefundTypes,
                        token}, this.MobileOrderRefundOperationCompleted, userState);
        }
        
        private void OnMobileOrderRefundOperationCompleted(object arg) {
            if ((this.MobileOrderRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileOrderRefundCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetVersion() {
            this.Invoke("GetVersion", new object[0]);
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MobileReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MobileReceipt(string OrderNumber, string token) {
            this.Invoke("MobileReceipt", new object[] {
                        OrderNumber,
                        token});
        }
        
        /// <remarks/>
        public void MobileReceiptAsync(string OrderNumber, string token) {
            this.MobileReceiptAsync(OrderNumber, token, null);
        }
        
        /// <remarks/>
        public void MobileReceiptAsync(string OrderNumber, string token, object userState) {
            if ((this.MobileReceiptOperationCompleted == null)) {
                this.MobileReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileReceiptOperationCompleted);
            }
            this.InvokeAsync("MobileReceipt", new object[] {
                        OrderNumber,
                        token}, this.MobileReceiptOperationCompleted, userState);
        }
        
        private void OnMobileReceiptOperationCompleted(object arg) {
            if ((this.MobileReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileReceiptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelteAdress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelteAdress(string guid, string token) {
            this.Invoke("DelteAdress", new object[] {
                        guid,
                        token});
        }
        
        /// <remarks/>
        public void DelteAdressAsync(string guid, string token) {
            this.DelteAdressAsync(guid, token, null);
        }
        
        /// <remarks/>
        public void DelteAdressAsync(string guid, string token, object userState) {
            if ((this.DelteAdressOperationCompleted == null)) {
                this.DelteAdressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelteAdressOperationCompleted);
            }
            this.InvokeAsync("DelteAdress", new object[] {
                        guid,
                        token}, this.DelteAdressOperationCompleted, userState);
        }
        
        private void OnDelteAdressOperationCompleted(object arg) {
            if ((this.DelteAdressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelteAdressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAdressIsDefault", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAdressIsDefault(string guid, string memloginid, string token) {
            this.Invoke("UpdateAdressIsDefault", new object[] {
                        guid,
                        memloginid,
                        token});
        }
        
        /// <remarks/>
        public void UpdateAdressIsDefaultAsync(string guid, string memloginid, string token) {
            this.UpdateAdressIsDefaultAsync(guid, memloginid, token, null);
        }
        
        /// <remarks/>
        public void UpdateAdressIsDefaultAsync(string guid, string memloginid, string token, object userState) {
            if ((this.UpdateAdressIsDefaultOperationCompleted == null)) {
                this.UpdateAdressIsDefaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAdressIsDefaultOperationCompleted);
            }
            this.InvokeAsync("UpdateAdressIsDefault", new object[] {
                        guid,
                        memloginid,
                        token}, this.UpdateAdressIsDefaultOperationCompleted, userState);
        }
        
        private void OnUpdateAdressIsDefaultOperationCompleted(object arg) {
            if ((this.UpdateAdressIsDefaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAdressIsDefaultCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteShopCar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteShopCar(string guid, string token) {
            this.Invoke("DeleteShopCar", new object[] {
                        guid,
                        token});
        }
        
        /// <remarks/>
        public void DeleteShopCarAsync(string guid, string token) {
            this.DeleteShopCarAsync(guid, token, null);
        }
        
        /// <remarks/>
        public void DeleteShopCarAsync(string guid, string token, object userState) {
            if ((this.DeleteShopCarOperationCompleted == null)) {
                this.DeleteShopCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteShopCarOperationCompleted);
            }
            this.InvokeAsync("DeleteShopCar", new object[] {
                        guid,
                        token}, this.DeleteShopCarOperationCompleted, userState);
        }
        
        private void OnDeleteShopCarOperationCompleted(object arg) {
            if ((this.DeleteShopCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteShopCarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllShopCarBymemberloginID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectAllShopCarBymemberloginID(string memberloginID, string token) {
            this.Invoke("SelectAllShopCarBymemberloginID", new object[] {
                        memberloginID,
                        token});
        }
        
        /// <remarks/>
        public void SelectAllShopCarBymemberloginIDAsync(string memberloginID, string token) {
            this.SelectAllShopCarBymemberloginIDAsync(memberloginID, token, null);
        }
        
        /// <remarks/>
        public void SelectAllShopCarBymemberloginIDAsync(string memberloginID, string token, object userState) {
            if ((this.SelectAllShopCarBymemberloginIDOperationCompleted == null)) {
                this.SelectAllShopCarBymemberloginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllShopCarBymemberloginIDOperationCompleted);
            }
            this.InvokeAsync("SelectAllShopCarBymemberloginID", new object[] {
                        memberloginID,
                        token}, this.SelectAllShopCarBymemberloginIDOperationCompleted, userState);
        }
        
        private void OnSelectAllShopCarBymemberloginIDOperationCompleted(object arg) {
            if ((this.SelectAllShopCarBymemberloginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllShopCarBymemberloginIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelcteMoeneyBypwdANDTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelcteMoeneyBypwdANDTransfer(string meloginid, string paypwd, decimal AdvancePayment) {
            object[] results = this.Invoke("SelcteMoeneyBypwdANDTransfer", new object[] {
                        meloginid,
                        paypwd,
                        AdvancePayment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelcteMoeneyBypwdANDTransferAsync(string meloginid, string paypwd, decimal AdvancePayment) {
            this.SelcteMoeneyBypwdANDTransferAsync(meloginid, paypwd, AdvancePayment, null);
        }
        
        /// <remarks/>
        public void SelcteMoeneyBypwdANDTransferAsync(string meloginid, string paypwd, decimal AdvancePayment, object userState) {
            if ((this.SelcteMoeneyBypwdANDTransferOperationCompleted == null)) {
                this.SelcteMoeneyBypwdANDTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelcteMoeneyBypwdANDTransferOperationCompleted);
            }
            this.InvokeAsync("SelcteMoeneyBypwdANDTransfer", new object[] {
                        meloginid,
                        paypwd,
                        AdvancePayment}, this.SelcteMoeneyBypwdANDTransferOperationCompleted, userState);
        }
        
        private void OnSelcteMoeneyBypwdANDTransferOperationCompleted(object arg) {
            if ((this.SelcteMoeneyBypwdANDTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelcteMoeneyBypwdANDTransferCompleted(this, new SelcteMoeneyBypwdANDTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SignIn_HV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SignIn_HV(string MyMemLoginID, string token) {
            this.Invoke("SignIn_HV", new object[] {
                        MyMemLoginID,
                        token});
        }
        
        /// <remarks/>
        public void SignIn_HVAsync(string MyMemLoginID, string token) {
            this.SignIn_HVAsync(MyMemLoginID, token, null);
        }
        
        /// <remarks/>
        public void SignIn_HVAsync(string MyMemLoginID, string token, object userState) {
            if ((this.SignIn_HVOperationCompleted == null)) {
                this.SignIn_HVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignIn_HVOperationCompleted);
            }
            this.InvokeAsync("SignIn_HV", new object[] {
                        MyMemLoginID,
                        token}, this.SignIn_HVOperationCompleted, userState);
        }
        
        private void OnSignIn_HVOperationCompleted(object arg) {
            if ((this.SignIn_HVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignIn_HVCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PayDecrease", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PayDecrease(string MemLoginID, string MessageCode, string PayPwd, string Decrease_bv, string Remark, string token) {
            this.Invoke("PayDecrease", new object[] {
                        MemLoginID,
                        MessageCode,
                        PayPwd,
                        Decrease_bv,
                        Remark,
                        token});
        }
        
        /// <remarks/>
        public void PayDecreaseAsync(string MemLoginID, string MessageCode, string PayPwd, string Decrease_bv, string Remark, string token) {
            this.PayDecreaseAsync(MemLoginID, MessageCode, PayPwd, Decrease_bv, Remark, token, null);
        }
        
        /// <remarks/>
        public void PayDecreaseAsync(string MemLoginID, string MessageCode, string PayPwd, string Decrease_bv, string Remark, string token, object userState) {
            if ((this.PayDecreaseOperationCompleted == null)) {
                this.PayDecreaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayDecreaseOperationCompleted);
            }
            this.InvokeAsync("PayDecrease", new object[] {
                        MemLoginID,
                        MessageCode,
                        PayPwd,
                        Decrease_bv,
                        Remark,
                        token}, this.PayDecreaseOperationCompleted, userState);
        }
        
        private void OnPayDecreaseOperationCompleted(object arg) {
            if ((this.PayDecreaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayDecreaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PayDecrease_Bank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PayDecrease_Bank(string MemLoginID, string token) {
            this.Invoke("PayDecrease_Bank", new object[] {
                        MemLoginID,
                        token});
        }
        
        /// <remarks/>
        public void PayDecrease_BankAsync(string MemLoginID, string token) {
            this.PayDecrease_BankAsync(MemLoginID, token, null);
        }
        
        /// <remarks/>
        public void PayDecrease_BankAsync(string MemLoginID, string token, object userState) {
            if ((this.PayDecrease_BankOperationCompleted == null)) {
                this.PayDecrease_BankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayDecrease_BankOperationCompleted);
            }
            this.InvokeAsync("PayDecrease_Bank", new object[] {
                        MemLoginID,
                        token}, this.PayDecrease_BankOperationCompleted, userState);
        }
        
        private void OnPayDecrease_BankOperationCompleted(object arg) {
            if ((this.PayDecrease_BankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayDecrease_BankCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PayTransfer_BV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PayTransfer_BV(string MemLoginID, string MessageCode, string TransferID, string TransferID2, string PayPwd, string Transfer, string TransferName, string Remark, string token) {
            this.Invoke("PayTransfer_BV", new object[] {
                        MemLoginID,
                        MessageCode,
                        TransferID,
                        TransferID2,
                        PayPwd,
                        Transfer,
                        TransferName,
                        Remark,
                        token});
        }
        
        /// <remarks/>
        public void PayTransfer_BVAsync(string MemLoginID, string MessageCode, string TransferID, string TransferID2, string PayPwd, string Transfer, string TransferName, string Remark, string token) {
            this.PayTransfer_BVAsync(MemLoginID, MessageCode, TransferID, TransferID2, PayPwd, Transfer, TransferName, Remark, token, null);
        }
        
        /// <remarks/>
        public void PayTransfer_BVAsync(string MemLoginID, string MessageCode, string TransferID, string TransferID2, string PayPwd, string Transfer, string TransferName, string Remark, string token, object userState) {
            if ((this.PayTransfer_BVOperationCompleted == null)) {
                this.PayTransfer_BVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayTransfer_BVOperationCompleted);
            }
            this.InvokeAsync("PayTransfer_BV", new object[] {
                        MemLoginID,
                        MessageCode,
                        TransferID,
                        TransferID2,
                        PayPwd,
                        Transfer,
                        TransferName,
                        Remark,
                        token}, this.PayTransfer_BVOperationCompleted, userState);
        }
        
        private void OnPayTransfer_BVOperationCompleted(object arg) {
            if ((this.PayTransfer_BVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayTransfer_BVCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllPreTransferByMemberloginID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectAllPreTransferByMemberloginID(string memberloginID, string Currentpage, string PageSize, string type, string token) {
            this.Invoke("SelectAllPreTransferByMemberloginID", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        type,
                        token});
        }
        
        /// <remarks/>
        public void SelectAllPreTransferByMemberloginIDAsync(string memberloginID, string Currentpage, string PageSize, string type, string token) {
            this.SelectAllPreTransferByMemberloginIDAsync(memberloginID, Currentpage, PageSize, type, token, null);
        }
        
        /// <remarks/>
        public void SelectAllPreTransferByMemberloginIDAsync(string memberloginID, string Currentpage, string PageSize, string type, string token, object userState) {
            if ((this.SelectAllPreTransferByMemberloginIDOperationCompleted == null)) {
                this.SelectAllPreTransferByMemberloginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllPreTransferByMemberloginIDOperationCompleted);
            }
            this.InvokeAsync("SelectAllPreTransferByMemberloginID", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        type,
                        token}, this.SelectAllPreTransferByMemberloginIDOperationCompleted, userState);
        }
        
        private void OnSelectAllPreTransferByMemberloginIDOperationCompleted(object arg) {
            if ((this.SelectAllPreTransferByMemberloginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllPreTransferByMemberloginIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllAdvancePaymentApplyLogByMemberloginID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectAllAdvancePaymentApplyLogByMemberloginID(string memberloginID, string Currentpage, string PageSize, string token) {
            this.Invoke("SelectAllAdvancePaymentApplyLogByMemberloginID", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        token});
        }
        
        /// <remarks/>
        public void SelectAllAdvancePaymentApplyLogByMemberloginIDAsync(string memberloginID, string Currentpage, string PageSize, string token) {
            this.SelectAllAdvancePaymentApplyLogByMemberloginIDAsync(memberloginID, Currentpage, PageSize, token, null);
        }
        
        /// <remarks/>
        public void SelectAllAdvancePaymentApplyLogByMemberloginIDAsync(string memberloginID, string Currentpage, string PageSize, string token, object userState) {
            if ((this.SelectAllAdvancePaymentApplyLogByMemberloginIDOperationCompleted == null)) {
                this.SelectAllAdvancePaymentApplyLogByMemberloginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllAdvancePaymentApplyLogByMemberloginIDOperationCompleted);
            }
            this.InvokeAsync("SelectAllAdvancePaymentApplyLogByMemberloginID", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        token}, this.SelectAllAdvancePaymentApplyLogByMemberloginIDOperationCompleted, userState);
        }
        
        private void OnSelectAllAdvancePaymentApplyLogByMemberloginIDOperationCompleted(object arg) {
            if ((this.SelectAllAdvancePaymentApplyLogByMemberloginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllAdvancePaymentApplyLogByMemberloginIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllAdvancePaymentModifyLogByMemberloginID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectAllAdvancePaymentModifyLogByMemberloginID(string memberloginID, string Currentpage, string PageSize, string strPayType, string token) {
            this.Invoke("SelectAllAdvancePaymentModifyLogByMemberloginID", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        strPayType,
                        token});
        }
        
        /// <remarks/>
        public void SelectAllAdvancePaymentModifyLogByMemberloginIDAsync(string memberloginID, string Currentpage, string PageSize, string strPayType, string token) {
            this.SelectAllAdvancePaymentModifyLogByMemberloginIDAsync(memberloginID, Currentpage, PageSize, strPayType, token, null);
        }
        
        /// <remarks/>
        public void SelectAllAdvancePaymentModifyLogByMemberloginIDAsync(string memberloginID, string Currentpage, string PageSize, string strPayType, string token, object userState) {
            if ((this.SelectAllAdvancePaymentModifyLogByMemberloginIDOperationCompleted == null)) {
                this.SelectAllAdvancePaymentModifyLogByMemberloginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllAdvancePaymentModifyLogByMemberloginIDOperationCompleted);
            }
            this.InvokeAsync("SelectAllAdvancePaymentModifyLogByMemberloginID", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        strPayType,
                        token}, this.SelectAllAdvancePaymentModifyLogByMemberloginIDOperationCompleted, userState);
        }
        
        private void OnSelectAllAdvancePaymentModifyLogByMemberloginIDOperationCompleted(object arg) {
            if ((this.SelectAllAdvancePaymentModifyLogByMemberloginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllAdvancePaymentModifyLogByMemberloginIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllPreTransferByMemberloginIDCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectAllPreTransferByMemberloginIDCount(string memberloginID, string Currentpage, string PageSize, string type, string token) {
            this.Invoke("SelectAllPreTransferByMemberloginIDCount", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        type,
                        token});
        }
        
        /// <remarks/>
        public void SelectAllPreTransferByMemberloginIDCountAsync(string memberloginID, string Currentpage, string PageSize, string type, string token) {
            this.SelectAllPreTransferByMemberloginIDCountAsync(memberloginID, Currentpage, PageSize, type, token, null);
        }
        
        /// <remarks/>
        public void SelectAllPreTransferByMemberloginIDCountAsync(string memberloginID, string Currentpage, string PageSize, string type, string token, object userState) {
            if ((this.SelectAllPreTransferByMemberloginIDCountOperationCompleted == null)) {
                this.SelectAllPreTransferByMemberloginIDCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllPreTransferByMemberloginIDCountOperationCompleted);
            }
            this.InvokeAsync("SelectAllPreTransferByMemberloginIDCount", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        type,
                        token}, this.SelectAllPreTransferByMemberloginIDCountOperationCompleted, userState);
        }
        
        private void OnSelectAllPreTransferByMemberloginIDCountOperationCompleted(object arg) {
            if ((this.SelectAllPreTransferByMemberloginIDCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllPreTransferByMemberloginIDCountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllAdvancePaymentApplyLogByMemberloginIDCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectAllAdvancePaymentApplyLogByMemberloginIDCount(string memberloginID, string Currentpage, string PageSize, string token) {
            this.Invoke("SelectAllAdvancePaymentApplyLogByMemberloginIDCount", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        token});
        }
        
        /// <remarks/>
        public void SelectAllAdvancePaymentApplyLogByMemberloginIDCountAsync(string memberloginID, string Currentpage, string PageSize, string token) {
            this.SelectAllAdvancePaymentApplyLogByMemberloginIDCountAsync(memberloginID, Currentpage, PageSize, token, null);
        }
        
        /// <remarks/>
        public void SelectAllAdvancePaymentApplyLogByMemberloginIDCountAsync(string memberloginID, string Currentpage, string PageSize, string token, object userState) {
            if ((this.SelectAllAdvancePaymentApplyLogByMemberloginIDCountOperationCompleted == null)) {
                this.SelectAllAdvancePaymentApplyLogByMemberloginIDCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllAdvancePaymentApplyLogByMemberloginIDCountOperationCompleted);
            }
            this.InvokeAsync("SelectAllAdvancePaymentApplyLogByMemberloginIDCount", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        token}, this.SelectAllAdvancePaymentApplyLogByMemberloginIDCountOperationCompleted, userState);
        }
        
        private void OnSelectAllAdvancePaymentApplyLogByMemberloginIDCountOperationCompleted(object arg) {
            if ((this.SelectAllAdvancePaymentApplyLogByMemberloginIDCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllAdvancePaymentApplyLogByMemberloginIDCountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllAdvancePaymentModifyLogByMemberloginIDCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectAllAdvancePaymentModifyLogByMemberloginIDCount(string memberloginID, string Currentpage, string PageSize, string strPayType, string token) {
            this.Invoke("SelectAllAdvancePaymentModifyLogByMemberloginIDCount", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        strPayType,
                        token});
        }
        
        /// <remarks/>
        public void SelectAllAdvancePaymentModifyLogByMemberloginIDCountAsync(string memberloginID, string Currentpage, string PageSize, string strPayType, string token) {
            this.SelectAllAdvancePaymentModifyLogByMemberloginIDCountAsync(memberloginID, Currentpage, PageSize, strPayType, token, null);
        }
        
        /// <remarks/>
        public void SelectAllAdvancePaymentModifyLogByMemberloginIDCountAsync(string memberloginID, string Currentpage, string PageSize, string strPayType, string token, object userState) {
            if ((this.SelectAllAdvancePaymentModifyLogByMemberloginIDCountOperationCompleted == null)) {
                this.SelectAllAdvancePaymentModifyLogByMemberloginIDCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllAdvancePaymentModifyLogByMemberloginIDCountOperationCompleted);
            }
            this.InvokeAsync("SelectAllAdvancePaymentModifyLogByMemberloginIDCount", new object[] {
                        memberloginID,
                        Currentpage,
                        PageSize,
                        strPayType,
                        token}, this.SelectAllAdvancePaymentModifyLogByMemberloginIDCountOperationCompleted, userState);
        }
        
        private void OnSelectAllAdvancePaymentModifyLogByMemberloginIDCountOperationCompleted(object arg) {
            if ((this.SelectAllAdvancePaymentModifyLogByMemberloginIDCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllAdvancePaymentModifyLogByMemberloginIDCountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MemberRegisterMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MemberRegisterMember(string memloginid, string Email, string Mobile, string Name, string recommendid, string IdentityCard, string Pwd, string Code, string Encryption) {
            this.Invoke("MemberRegisterMember", new object[] {
                        memloginid,
                        Email,
                        Mobile,
                        Name,
                        recommendid,
                        IdentityCard,
                        Pwd,
                        Code,
                        Encryption});
        }
        
        /// <remarks/>
        public void MemberRegisterMemberAsync(string memloginid, string Email, string Mobile, string Name, string recommendid, string IdentityCard, string Pwd, string Code, string Encryption) {
            this.MemberRegisterMemberAsync(memloginid, Email, Mobile, Name, recommendid, IdentityCard, Pwd, Code, Encryption, null);
        }
        
        /// <remarks/>
        public void MemberRegisterMemberAsync(string memloginid, string Email, string Mobile, string Name, string recommendid, string IdentityCard, string Pwd, string Code, string Encryption, object userState) {
            if ((this.MemberRegisterMemberOperationCompleted == null)) {
                this.MemberRegisterMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMemberRegisterMemberOperationCompleted);
            }
            this.InvokeAsync("MemberRegisterMember", new object[] {
                        memloginid,
                        Email,
                        Mobile,
                        Name,
                        recommendid,
                        IdentityCard,
                        Pwd,
                        Code,
                        Encryption}, this.MemberRegisterMemberOperationCompleted, userState);
        }
        
        private void OnMemberRegisterMemberOperationCompleted(object arg) {
            if ((this.MemberRegisterMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MemberRegisterMemberCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MemberRegisterMandarinMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MemberRegisterMandarinMember(string memloginid, string Email, string Mobile, string Name, string recommendid, string IdentityCard, string Pwd, string Code, string Encryption) {
            this.Invoke("MemberRegisterMandarinMember", new object[] {
                        memloginid,
                        Email,
                        Mobile,
                        Name,
                        recommendid,
                        IdentityCard,
                        Pwd,
                        Code,
                        Encryption});
        }
        
        /// <remarks/>
        public void MemberRegisterMandarinMemberAsync(string memloginid, string Email, string Mobile, string Name, string recommendid, string IdentityCard, string Pwd, string Code, string Encryption) {
            this.MemberRegisterMandarinMemberAsync(memloginid, Email, Mobile, Name, recommendid, IdentityCard, Pwd, Code, Encryption, null);
        }
        
        /// <remarks/>
        public void MemberRegisterMandarinMemberAsync(string memloginid, string Email, string Mobile, string Name, string recommendid, string IdentityCard, string Pwd, string Code, string Encryption, object userState) {
            if ((this.MemberRegisterMandarinMemberOperationCompleted == null)) {
                this.MemberRegisterMandarinMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMemberRegisterMandarinMemberOperationCompleted);
            }
            this.InvokeAsync("MemberRegisterMandarinMember", new object[] {
                        memloginid,
                        Email,
                        Mobile,
                        Name,
                        recommendid,
                        IdentityCard,
                        Pwd,
                        Code,
                        Encryption}, this.MemberRegisterMandarinMemberOperationCompleted, userState);
        }
        
        private void OnMemberRegisterMandarinMemberOperationCompleted(object arg) {
            if ((this.MemberRegisterMandarinMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MemberRegisterMandarinMemberCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MemberRegisterMemberGetMemberNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MemberRegisterMemberGetMemberNumber() {
            this.Invoke("MemberRegisterMemberGetMemberNumber", new object[0]);
        }
        
        /// <remarks/>
        public void MemberRegisterMemberGetMemberNumberAsync() {
            this.MemberRegisterMemberGetMemberNumberAsync(null);
        }
        
        /// <remarks/>
        public void MemberRegisterMemberGetMemberNumberAsync(object userState) {
            if ((this.MemberRegisterMemberGetMemberNumberOperationCompleted == null)) {
                this.MemberRegisterMemberGetMemberNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMemberRegisterMemberGetMemberNumberOperationCompleted);
            }
            this.InvokeAsync("MemberRegisterMemberGetMemberNumber", new object[0], this.MemberRegisterMemberGetMemberNumberOperationCompleted, userState);
        }
        
        private void OnMemberRegisterMemberGetMemberNumberOperationCompleted(object arg) {
            if ((this.MemberRegisterMemberGetMemberNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MemberRegisterMemberGetMemberNumberCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MemberRegisterMandarinMemberGetMemberNumberRegister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MemberRegisterMandarinMemberGetMemberNumberRegister() {
            this.Invoke("MemberRegisterMandarinMemberGetMemberNumberRegister", new object[0]);
        }
        
        /// <remarks/>
        public void MemberRegisterMandarinMemberGetMemberNumberRegisterAsync() {
            this.MemberRegisterMandarinMemberGetMemberNumberRegisterAsync(null);
        }
        
        /// <remarks/>
        public void MemberRegisterMandarinMemberGetMemberNumberRegisterAsync(object userState) {
            if ((this.MemberRegisterMandarinMemberGetMemberNumberRegisterOperationCompleted == null)) {
                this.MemberRegisterMandarinMemberGetMemberNumberRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMemberRegisterMandarinMemberGetMemberNumberRegisterOperationCompleted);
            }
            this.InvokeAsync("MemberRegisterMandarinMemberGetMemberNumberRegister", new object[0], this.MemberRegisterMandarinMemberGetMemberNumberRegisterOperationCompleted, userState);
        }
        
        private void OnMemberRegisterMandarinMemberGetMemberNumberRegisterOperationCompleted(object arg) {
            if ((this.MemberRegisterMandarinMemberGetMemberNumberRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MemberRegisterMandarinMemberGetMemberNumberRegisterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/img", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void img() {
            this.Invoke("img", new object[0]);
        }
        
        /// <remarks/>
        public void imgAsync() {
            this.imgAsync(null);
        }
        
        /// <remarks/>
        public void imgAsync(object userState) {
            if ((this.imgOperationCompleted == null)) {
                this.imgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimgOperationCompleted);
            }
            this.InvokeAsync("img", new object[0], this.imgOperationCompleted, userState);
        }
        
        private void OnimgOperationCompleted(object arg) {
            if ((this.imgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.imgCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BindMobile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BindMobile(string MessageCode, string modile, string MemLoginID, string token) {
            this.Invoke("BindMobile", new object[] {
                        MessageCode,
                        modile,
                        MemLoginID,
                        token});
        }
        
        /// <remarks/>
        public void BindMobileAsync(string MessageCode, string modile, string MemLoginID, string token) {
            this.BindMobileAsync(MessageCode, modile, MemLoginID, token, null);
        }
        
        /// <remarks/>
        public void BindMobileAsync(string MessageCode, string modile, string MemLoginID, string token, object userState) {
            if ((this.BindMobileOperationCompleted == null)) {
                this.BindMobileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBindMobileOperationCompleted);
            }
            this.InvokeAsync("BindMobile", new object[] {
                        MessageCode,
                        modile,
                        MemLoginID,
                        token}, this.BindMobileOperationCompleted, userState);
        }
        
        private void OnBindMobileOperationCompleted(object arg) {
            if ((this.BindMobileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BindMobileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BindTradePWD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BindTradePWD(string MessageCode, string modile, string MemLoginID, string payPwd, string token) {
            this.Invoke("BindTradePWD", new object[] {
                        MessageCode,
                        modile,
                        MemLoginID,
                        payPwd,
                        token});
        }
        
        /// <remarks/>
        public void BindTradePWDAsync(string MessageCode, string modile, string MemLoginID, string payPwd, string token) {
            this.BindTradePWDAsync(MessageCode, modile, MemLoginID, payPwd, token, null);
        }
        
        /// <remarks/>
        public void BindTradePWDAsync(string MessageCode, string modile, string MemLoginID, string payPwd, string token, object userState) {
            if ((this.BindTradePWDOperationCompleted == null)) {
                this.BindTradePWDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBindTradePWDOperationCompleted);
            }
            this.InvokeAsync("BindTradePWD", new object[] {
                        MessageCode,
                        modile,
                        MemLoginID,
                        payPwd,
                        token}, this.BindTradePWDOperationCompleted, userState);
        }
        
        private void OnBindTradePWDOperationCompleted(object arg) {
            if ((this.BindTradePWDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BindTradePWDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SettingsPWD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SettingsPWD(string MemLoginID, string OldPwd, string NewPwd, string NewSecondPwd, string token) {
            this.Invoke("SettingsPWD", new object[] {
                        MemLoginID,
                        OldPwd,
                        NewPwd,
                        NewSecondPwd,
                        token});
        }
        
        /// <remarks/>
        public void SettingsPWDAsync(string MemLoginID, string OldPwd, string NewPwd, string NewSecondPwd, string token) {
            this.SettingsPWDAsync(MemLoginID, OldPwd, NewPwd, NewSecondPwd, token, null);
        }
        
        /// <remarks/>
        public void SettingsPWDAsync(string MemLoginID, string OldPwd, string NewPwd, string NewSecondPwd, string token, object userState) {
            if ((this.SettingsPWDOperationCompleted == null)) {
                this.SettingsPWDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSettingsPWDOperationCompleted);
            }
            this.InvokeAsync("SettingsPWD", new object[] {
                        MemLoginID,
                        OldPwd,
                        NewPwd,
                        NewSecondPwd,
                        token}, this.SettingsPWDOperationCompleted, userState);
        }
        
        private void OnSettingsPWDOperationCompleted(object arg) {
            if ((this.SettingsPWDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SettingsPWDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectProdctByShop_category_idCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectProdctByShop_category_id_twoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectProdctByThreeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectProdctByIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectProdctByGUIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectMemberInfoAllByMemloginIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectAddressByMemberloginIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectUserMessageBymemberloginIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectMemberRank_LinkCategoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectOrderByMemberloginIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectOrderByMemberloginIDAndOrderStyleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectOrderProductByOrderInfoGuidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectOrderByMemberloginID_GetCountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddShopCarCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PostPriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateOrderCarCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ADDAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MobileServiceRechargeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectProductByNameAndShop_category_idCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectProductByProductCategoryCodeAndShop_category_idCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectAllShopCategoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetScore_pv_bCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Login_Web_tj88CompletedEventHandler(object sender, Login_Web_tj88CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Login_Web_tj88CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Login_Web_tj88CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoginidGetAllMemberCompletedEventHandler(object sender, LoginidGetAllMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginidGetAllMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginidGetAllMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectOrderByGuidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetALLMemberByShopidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MobileOrderRefundCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetVersionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MobileReceiptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelteAdressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateAdressIsDefaultCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteShopCarCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectAllShopCarBymemberloginIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelcteMoeneyBypwdANDTransferCompletedEventHandler(object sender, SelcteMoeneyBypwdANDTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelcteMoeneyBypwdANDTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelcteMoeneyBypwdANDTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SignIn_HVCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PayDecreaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PayDecrease_BankCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PayTransfer_BVCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectAllPreTransferByMemberloginIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectAllAdvancePaymentApplyLogByMemberloginIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectAllAdvancePaymentModifyLogByMemberloginIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectAllPreTransferByMemberloginIDCountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectAllAdvancePaymentApplyLogByMemberloginIDCountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectAllAdvancePaymentModifyLogByMemberloginIDCountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MemberRegisterMemberCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MemberRegisterMandarinMemberCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MemberRegisterMemberGetMemberNumberCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MemberRegisterMandarinMemberGetMemberNumberRegisterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void imgCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BindMobileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BindTradePWDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SettingsPWDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591